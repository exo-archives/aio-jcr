<<eXo Java Content Repository (JCR - JSR 170)>>

  The main purpose of standardized Java Content Repository is providing standardized, reliable intermediary layer between custom application and data storage. 
  The documents could be stored in a relational database or in a native XML DB but your client code would not change.

[images/abstraction.png]

<<Advantages for application developers:>>

  * Data repository and application are isolated to each other so application developer should not learn the details of particular data storage's interfaces and can concentrate on business logic of particular application built on top of JCR

  * Repositories can be simply exchanged between different applications without changes the applications itself. This is the matter of repository configuration 

  * Data storage types/versions can be changed and moreover different types of data storages can be combined in one repository data model (of course the complexity and work of building interfaces between the repository and its data storage doesn't disappear but these changes are isolated in repository and thus manageable from the point of view of the customer)


<<Advantages for managers>>

  * Using of standardized repository for content management reduces risk to be dependent of particular software vendor and proprietary API

  * Costs for maintain and development content repository based custom application is significantly lower than development and support own interfaces and maintain own data repository applications (staff can be trained once, it is possible to take help from community and third party consulters)

  * Thanks to flexible layered JCR API (see below) it is possible to fit legacy storage subsystem to new interfaces and again increase expensive and risk to lose data
