<<eXo JCR configuration>> 

  <<Portal and Standalone configurations>>

  Like other eXo service eXo JCR can be configured and used both as service embedded into eXo portal and standalone.

  In Embedded node JCR services are registered in Portal container and second option is Standalone container registration. The main differences bettwen these container types is that first one indended to be used in Portal (Web) environment, while second one can be used standalone (see documentation about Exo Container for more details).

  The main difference in configuration of Portal and Standalone container is that Standalone container uses one configuration entry point. The following priority is using to obtain Standalone configuration:

  1. Configuration that is set explicitly using <StandaloneContainer.setConfigurationURL(String url) or StandaloneContainer.setConfigurationPath(String path)> before getInstance() 

  2. Configuration from $base:directory/conf/standalone/configuration.xml file. Where $base:directory is either AS's home directory in a case of J2EE AS environment or just current directory in a case of standalone application.

  3. /conf/exo-configuration.xml in current classloader

  4. Configuration from $service_jar_file/conf/standalone/configuration.xml. WARNING: do not rely on some concrete jar's configuration if you have more than one jar containing conf/standalone/configuration.xml file. In this case configuration choosing is unpredictable.

  JCR service configuration looks like:

---------
  <component>
    <key>org.exoplatform.services.jcr.RepositoryService</key>
    <type>org.exoplatform.services.jcr.impl.RepositoryServiceImpl</type>
  </component>
  <component>
    <key>org.exoplatform.services.jcr.config.RepositoryServiceConfiguration</key>
    <type>org.exoplatform.services.jcr.impl.config.RepositoryServiceConfigurationImpl</type>
    <init-params>
      <value-param>
        <name>conf-path</name>
        <description>JCR configuration file</description>
        <value>jar:/conf/standalone/exo-jcr-config.xml</value>
      </value-param>
    </init-params>
  </component>
---------

  Actual JCR Configuration is defined in <<conf-path>> parameter of <<RepositoryServiceConfiguration>>

  <<JCR Configuration>>

  Configuration is defined in XML file (see DTD below) 

  JCR Service can use multiple <<Repositories>> and each repository can have multiple <<Workspaces>>.

*---*
  Repository service configuration:
*---*

  <<default-repository>> - name of default repository (one returned by RepositoryService.getRepository())

  <<repositories>> - list of repository

*---*
  Repository configuration:
*---*

  <<name>> - name of repository

  <<default-workspace>> - name of workspace obtained using Session's login() or login(Credentials) methods (ones without explicit workspace name) 

  <<system-workspace>> - name of workspace where /jcr:system node is placed

  <<security-domain>> - name of security domain for JAAS authentication

  <<access-control>> - name of access control policy. There can be 3 types: optional - ACL is created on-demand(default), disable - no access control, mandatory - ACL is created for each added node(not supported yet)

  <<authentication-policy>> - name of authentication policy class

  <<workspaces>> - list of workspaces

  <<session-max-age>> - time after which an idle session will be removed (called logout). If not set the idle session will never be removed.

*---*
  Workspace configuration:
*---*
  
  <<name>> - name of workspace
                       
  <<auto-init-root-nodetype>> - node type for root node initialization

  <<container>> - workspace data container (physical storage) configuration

  <<cache>> - workspace storage cache configuration  

  <<query-handler>> - query handler configuration  

  <<lock-time-out>> - time after which unused global lock will be removed.

*---*
  Workspace data container configuration:
*---*

  <<class>> - Workspace data container class name

  <<properties>> - list of properties (name-value pairs) for concrete Workspace data container

  <<value-storages>> - list of value storage plugins

*---*
  Value Storage plugin configuration (for data container):
*---*

  <<value-storage>> - Optional value Storage plugin definition:

  <<class>>- value storage plugin class name (attribute)

  <<properties>> - list of properties (name-value pairs) for concrete Value Storage plugin

  <<filters>> - list of filters defining conditions when this plugin is applicable

*---*
  Cache configuration:
*---*

  <<enabled>> - if workspace cache enabled

  <<properties>> - list of properties (name-value pairs) for Workspace cache (maxSize, liveTime) 

*---*
  Query Handler configuration:
*---*

  <<class>> - Query Handler class name

  <<properties>> - list of properties (name-value pairs) for Query Handler (indexDir) 

  
---------
  <!ELEMENT repository-service (repositories)>
  <!ATTLIST repository-service default-repository NMTOKEN #REQUIRED>
  <!ELEMENT repositories (repository)>
  <!ELEMENT repository (security-domain,access-control,authentication-policy,workspaces)>
  <!ATTLIST repository
	default-workspace NMTOKEN #REQUIRED
	name NMTOKEN #REQUIRED
	system-workspace NMTOKEN #REQUIRED
  >
  <!ELEMENT security-domain (#PCDATA)>
  <!ELEMENT access-control (#PCDATA)>
  <!ELEMENT authentication-policy (#PCDATA)>
  <!ELEMENT workspaces (workspace+)>
  <!ELEMENT workspace (container,cache,query-handler)>
  <!ATTLIST workspace
	auto-init-root-nodetype NMTOKEN #REQUIRED
	name NMTOKEN #REQUIRED
  >
  <!ELEMENT container (properties,value-storages)>
  <!ATTLIST container class NMTOKEN #REQUIRED>
  <!ELEMENT value-storages (value-storage+)>
  <!ELEMENT value-storage (properties,filters)>
  <!ATTLIST value-storage class NMTOKEN #REQUIRED>
  <!ELEMENT filters (filter+)>
  <!ELEMENT filter EMPTY>
  <!ATTLIST filter property-type NMTOKEN #REQUIRED>
  <!ELEMENT cache (properties)>
  <!ATTLIST cache enabled NMTOKEN #REQUIRED>
  <!ELEMENT query-handler (properties)>
  <!ATTLIST query-handler class NMTOKEN #REQUIRED>
  <!ELEMENT properties (property+)>
  <!ELEMENT property EMPTY>
---------

